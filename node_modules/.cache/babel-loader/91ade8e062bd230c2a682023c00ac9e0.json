{"ast":null,"code":"var _jsxFileName = \"/Users/infinite/Documents/ZTM/Complete Web Developer/FullStack_Apps/f_stack/facerecognition/src/App.js\";\nimport React, { Component } from 'react'; // import Particles from 'react-particles-js';\n\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css'; // My clarifai's API key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '0e3bef19a40045b5ad2cf8074b70b620'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box\n      });\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.handleImageSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState;\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    };\n  } // function to get the face location & draw the box around face\n\n\n  render() {\n    const {\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#00ffff\",\n        className: \"particlesbg\",\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          handleInputChange: this.handleInputChange,\n          handleImageSubmit: this.handleImageSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          imageUrl: imageUrl,\n          box: box\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/infinite/Documents/ZTM/Complete Web Developer/FullStack_Apps/f_stack/facerecognition/src/App.js"],"names":["React","Component","ParticlesBg","Clarifai","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","FaceRecognition","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","handleInputChange","e","input","target","value","handleImageSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Particles from 'react-particles-js';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\n\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport './App.css';\n\n// My clarifai's API key\nconst app = new Clarifai.App({\n  apiKey: '0e3bef19a40045b5ad2cf8074b70b620'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  // function to get the face location & draw the box around face\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box})\n  }\n\n  // function to keep track of changes in the input\n  handleInputChange = (e) => {\n    this.setState({input: e.target.value});\n  }\n\n  // this fxn will handle submitting the input for image detection\n  handleImageSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n      .then( response => this.displayFaceBox ( this.calculateFaceLocation(response) ) )\n      .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState\n    }\n    this.setState({route: route})\n  }\n  \n  render() {\n    const { imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        {/* <Particles className='particles' /> */}\n        <ParticlesBg color='#00ffff' className='particlesbg' type='cobweb' bg={true} />\n        <Navigation onRouteChange={this.onRouteChange} />\n        { route === 'home' ? \n          <>\n            <Logo />\n            <Rank />\n            <ImageLinkForm \n              handleInputChange={this.handleInputChange} \n              handleImageSubmit={this.handleImageSubmit} \n            />\n            <FaceRecognition imageUrl={imageUrl} box={box} />\n          </>\n          :\n          (\n            route === 'signin' ? \n              <SignIn onRouteChange={this.onRouteChange} /> \n              :\n              <Register onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}